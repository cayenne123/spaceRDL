?start: operational_stmt

?operational_stmt: time_constraint? automic_func time_cons_def? ";"

automic_func: compute_func

compute_func: compute_type output_data input_data

compute_type: "CalEnv"
            | "ProVld"
            | "DetAtt"
            | "CalCtrl"
            | "Diagnose"
            | "SwitchMode"
            | "CalTar"
            
?input_data: identifier
           | "{" identifier_list "}"

?output_data: identifier
            | "{" identifier_list "}"

identifier_list: identifier ("," identifier)*

?time_constraint: at_constraint
                | in_constraint
                | after_constraint
                | over_constraint

at_constraint: "At" "(" time ("," "period")? ("," time)? ")"

in_constraint: "In" "(" time ")"
             | "In" "[" time "," time "]"

after_constraint: "After" "(" time ")"
                | "After" "[" time "," time "]"

over_constraint: "Over" "(" time "," ("c" | "nc") "," number ")"

time_cons_def: "Finished" "Within" time

literal: number
       | decimal
       | bool_const
       | hex_const
       | bin_const
       | string_const
       | time

number: "0" 
      | /[1-9][0-9]*/

decimal: number "." /[0-9]+/

bool_const: "true" | "false"

hex_const: /0x[0-9a-fA-F]+/

bin_const: /[01]+/

string_const: /"[^"]*"/

time: number ("s" | "ms")

identifier: /[a-zA-Z_][a-zA-Z0-9_]*/

%import common.WS
%ignore WS