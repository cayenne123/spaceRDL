###BNF Grammar###
<Literal>         ::= <Number> | <Decimal> | <BoolConst> | <HexConst> | <BinConst> | <StringConst> | <Time>
<Number>          ::= '0' | [1-9][0-9]*
<Decimal>         ::= <Number> '.' [0-9]+
<BoolConst>       ::= 'true' | 'false'
<HexConst>        ::= '0x' [0-9a-fA-F]+
<BinConst>        ::= '0' | '1'
<StringConst>     ::= '"' (可打印字符)* '"' 
<Time>            ::= <Number> ('s' | 'ms' | 'us')

<Note>            ::= '/*' <StringConst> '*/'

<Identifier>      ::= [a-zA-Z_] [a-zA-Z0-9_]* 
<DataType>    ::= 'Int' | 'Unsigned Int' | 'Float' | 'Double' | 'Bool' | 'String' | 'TR32' <DataType>

<ArithmeticSymbol> ::= '+' | '-' | '*' | '/' | '%' | '^'
<LogicSymbol>      ::= 'and' | 'or' | 'not'
<CompareSymbol>    ::= '<' | '<=' | '==' | '>=' | '>' | '!='

<BoolExpr>        ::= <SingleBoolExpr> (('and' | 'or') <SingleBoolExpr>)*
<SingleBoolExpr>  ::= <BoolConst> | '(' <Identifier> <CompareSymbol> <Literal> ')'

// 系统组成运行平台
<SystemDef>       ::= 'System' '{' <CompDef>  <ControlDef>  <ConnectDef>* '}'
<CompDef>         ::= 'Device' <SubType> <DeviceName> '{' <CompAttr> '}'
<SubType>         ::= <Identifier>
<DeviceName> ::= <Identifier>

<CompAttr>        ::= ('GroupNum' ':' <UNSIGNEDNUMBER>)? <PortDef>+ ('ResponseTime' ':' <Time>)?
<PortDef>         ::= 'Port' <PortName> '(' <HEX_CONST> ')' ':' <PortAttr> (',' <PortAttr>)*
<PortAttr>        ::= <Identifier> ',' <Identifier>  // 数据名与协议表

// 控制计算机定义
<ControlDef>      ::= 'Controller' <ControllerType> <ControllerName> '{' <TimerDef> <ControlPeriod> <InterruptDef> '}'
<ControllerType>  ::= <Identifier>
<ControllerName>  ::= <Identifier>
<TimerDef>        ::= 'Timer' <Identifier> '{' 'Interval' ':' <Time> 'RegAddr' ':' <HEX_CONST> '}'
<ControlPeriod>   ::= 'ControlPeriod' ':' <Time>
<InterruptDef>    ::= 'Interrupt' <Identifier> '{' 'Trigger' ':' <TimerDef> '}'

// 数据声明
<DataDeclaration> ::= ('DeviceDataDeclaration' | 'BusinessDataDeclaration') '{' <VarDef>+ '}'
<VarDef>          ::= ('TR32' <DataType>)? <Identifier> ('[' <Number> ']')? (<TransTable>)? (':' <InitValue>)? ';'
<TransTable>      ::= <Identifier>  // 转换表引用
<InitValue>       ::= <Literal> | <Identifier>

// 依赖关系
<Dependencies>    ::= 'Dependencies' '{' (<DataDependency> | <ControlDependency>)+ '}'
<DataDependency>  ::= <Identifier> '{' <DataSet> '}' 'DependsOn' <Identifier> ';'
<ControlDependency> ::= <Identifier> '{' <DeviceSet> '}' 'DependsOn' <Identifier> ';'
<DataSet>         ::= <Identifier> (',' <Identifier>)*
<DeviceSet>       ::= <Identifier> (',' <Identifier>)*

// 操作性语句
<TimeConstraint>  ::= ('At' '(' <Time> (',' 'Period')? ')' | 
                      'In' '(' <Time> | '[' <Time> ',' <Time> ']' ')' | 
                      'After' '(' <Time> | '[' <Time> ',' <Time> ']' ')' | 
                      'Over' '(' <Time> ',' ('c' | 'nc') ',' <Number> ')')

<ReqCapByForm> ::=
    'ReqCapByTable' (<Identifier> | '{' <IdentifierList> '}') |
    'ReqCapByFormula' (<Identifier> | '{' <IdentifierList> '}') |
    'ReqCapByNL' (<String> | '{' <StringList> '}') |
    'ReqCapByPseudoCode' (<Identifier> | '{' <IdentifierList> '}') |
    'ReqCapByFlowChart' (<Identifier> | '{' <IdentifierList> '}')

<IdentifierList> ::= <Identifier> (',' <Identifier>)*
<StringList> ::= <String> (',' <String>)*

<TimeConsDef>     ::= 'Finished' 'Within' <Time>

// 原子指令模板
<InitFunc>        ::= 'Init' <PortName> '{' <Config> '}'
<GetDataFunc>     ::= 'GetData' <DeviceName> '{' <DataSet> '}'
<SendDataFunc>    ::= 'SendData'  <DeviceName>  '{' <DataSet> '}'
<ComputeFunc>     ::= ('OrbitCtrl' | 'ProVId' | 'DetAtt' | 'AttCtrl' | 'SwitchMode' | 'Diagnose') 
                      <OutputData> <InputData>
<ProTMFunc>       ::= 'ProTM' <Identifier> '{' <DataSet> '}'
<ProTCFunc>       ::= 'ProTC' <Identifier> '{' <DataSet> '}'

<AutomicFunc>     ::= <TimeConstraint>? ( 
    <InitFunc> | <SetFunc> | <GetDataFunc> | <SendDataFunc> | 
    <ComputeFunc> | <ProTMFunc> | <ProTCFunc> 
) <ReqCapByForm>? <TimeConsDef>?

###Device Library###
{device}

###Data Dictionary###
{data_dictionary}

###Example###
{example}

###Input Requirement###
{requirement}

###Output DSL###